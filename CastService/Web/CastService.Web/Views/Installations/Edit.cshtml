@using CastService.Web.ViewModels.Installations
@model DetailsInstallationViewModel
@{
    ViewBag.Title = "Нова инсталация";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Редактиране на инсталация</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "control-label text-danger" })
        <div class="form-group">
            @Html.EditorFor(m => m.CustomerId, new { ListItem = Model.CustomersNames })

            <div class="col-md-6">
                @Html.LabelFor(model => model.ObjectName, htmlAttributes: new { @class = "control-label col-md-12" })

                @Html.EditorFor(model => model.ObjectName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ObjectName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
                @Html.LabelFor(model => model.InstallationDate, htmlAttributes: new { @class = "control-label col-md-12" })
                @Html.EditorFor(model => model.InstallationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InstallationDate, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                @Html.LabelFor(model => model.GuessedTime, htmlAttributes: new { @class = "control-label col-md-12" })
                @Html.EditorFor(model => model.GuessedTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GuessedTime, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-12" })
                @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-12" })
                @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-6">
                @Html.LabelFor(model => model.DetectedFaults, htmlAttributes: new { @class = "control-label control-label" })
                <br />
                @Html.EditorFor(model => model.DetectedFaults, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DetectedFaults, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6">
                @Html.LabelFor(model => model.AdditionalActivities, htmlAttributes: new { @class = "control-label control-label" })
                <br />
                @Html.EditorFor(model => model.AdditionalActivities, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdditionalActivities, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />

        @* Equipment table*@
        <h3>Монтирано оборудване</h3>
        @if (Model.InstalledEquipment != null)
        {
            <table class="table">
                <tr>
                    <th>
                        @*@Html.DisplayNameFor(model => model.InstalledEquipment.Name)*@
                        Име
                    </th>
                    <th>
                        Партиден №
                    </th>
                    <th>
                        Сериен №
                    </th>
                    <th>
                        Количество
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model.InstalledEquipment)
                {
                    <tr>
                        <td>
                            @Html.HiddenFor(m => item.Equipment.Id)
                            @Html.DisplayFor(m => item.Equipment.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.Equipment.BatchNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.SerialNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(m => item.Quantity)
                        </td>
                    </tr>
                }
            </table>
        }
        <fieldset>
            <legend>Клиентът получи</legend>
            <div class="form-group">
                @Html.LabelFor(model => model.HasProtocol, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.HasProtocol)
                        @Html.ValidationMessageFor(model => model.HasProtocol, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InvoiceNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InvoiceNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.InvoiceDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.InvoiceDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.WarrantyCardNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.WarrantyCardNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.WarrantyCardNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Other, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Other, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Other, "", new { @class = "text-danger" })
                </div>
            </div>
        </fieldset>
        <hr />
        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
