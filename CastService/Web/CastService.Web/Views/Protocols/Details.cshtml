@using CastService.Web.ViewModels.Protocols
@model DetailsProtocolViewModel
@{
    ViewBag.Title = "Редактиране на протокол";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h3>Редактиране на протокол</h3>
        @Html.ValidationSummary(true, "", new { @class = "control-label text-danger" })
        <div class="form-group">
            <div class="col-md-6">
                @Html.DisplayNameFor(model => model.CustomerName):
                <strong>
                    @Html.DisplayFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>

            <div class="col-md-3">
                @Html.DisplayNameFor(model => model.ObjectType):
                <strong>
                    @Html.DisplayFor(model => model.ObjectType, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
            <div class="col-md-3">
                @Html.DisplayNameFor(model => model.ObjectNumber):
                <strong>
                    @Html.DisplayFor(model => model.ObjectNumber, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-6">
                @Html.DisplayNameFor(model => model.UserName):
                <strong>
                    @Html.DisplayFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>

            <div class="col-md-6">
                @Html.DisplayNameFor(model => model.CustomerRepresentative):
                <strong>
                    @Html.DisplayFor(model => model.CustomerRepresentative, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.ProtocolDate):
                <strong>
                    @Html.DisplayFor(model => model.ProtocolDate, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>

            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.StartTime):
                <strong>
                    @Html.DisplayFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.EndTime):
                <strong>
                    @Html.DisplayFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
            <div class="col-md-6">
                @Html.DisplayNameFor(model => model.ObjectDriver):
                <strong>
                    @Html.DisplayFor(model => model.ObjectDriver, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-6">
                @Html.DisplayNameFor(model => model.PerformedDiagnostic):
                <strong>
                    @Html.DisplayFor(model => model.PerformedDiagnostic, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
            <div class="col-md-6">
                @Html.DisplayNameFor(model => model.DetectedFauls):
                <strong>
                    @Html.DisplayFor(model => model.DetectedFauls, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-4">
                @Html.DisplayNameFor(model => model.PersonMadeRequest):
                <strong>
                    @Html.DisplayFor(model => model.PersonMadeRequest, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.RequestDate):<br />
                <strong>
                    @Html.DisplayFor(model => model.RequestDate, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.IsWarrantyService)
                <br />
                @Html.RadioButtonFor(m => m.IsWarrantyService, true, new { id = "is-warranty-service" })
                @Html.Label("is-warranty-service", "Гаранционно")
                <br />
                @Html.RadioButtonFor(m => m.IsWarrantyService, false, new { id = "not-warranty-service" })
                @Html.Label("not-warranty-service", "Извънгаранционно")
            </div>
            <div class="col-md-3">
                <br />
                @Html.RadioButtonFor(m => m.WithSubscriptionService, true, new { id = "with-subscription-service" })
                @Html.Label("with-subscription-service", "Абонаментно")
                <br />
                @Html.RadioButtonFor(m => m.WithSubscriptionService, false, new { id = "on-request-service" })
                @Html.Label("on-request-service", "По заявка")
            </div>
        </div>

        <div class="col-md-4"><h4><strong>Монтирано оборудване</strong></h4></div>

        <table class="table table-striped table-bordered" id="equipment-table">
            <tr>
                <th>Име</th>
                <th>Стар сериен №</th>
                <th>Нов сериен №</th>
                <th>Количество</th>
            </tr>
            @if (Model.ChangedEquipment != null)
            {
                for (int i = 0; i < Model.ChangedEquipment.Count(); i++)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(m => m.ChangedEquipment[i].EquipmentName)
                        </td>
                        <td>
                            @Html.DisplayFor(m => m.ChangedEquipment[i].OldSerialNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(m => m.ChangedEquipment[i].NewSerialNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(m => m.ChangedEquipment[i].Quantity)
                        </td>
                    </tr>
                }
            }
        </table>

        <h3>Клиентът получи</h3>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.HasCustomerProtocol):
                <strong>
                    @Html.DisplayFor(model => model.HasCustomerProtocol, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.InvoiceNumber):
                <strong>
                    @Html.DisplayFor(model => model.InvoiceNumber, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.InvoiceDate):
                <strong>
                    @Html.DisplayFor(model => model.InvoiceDate, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
            <div class="col-md-3">
                @Html.DisplayNameFor(model => model.WarrantyCardNumber):
                <strong>
                    @Html.DisplayFor(model => model.WarrantyCardNumber, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
            <div class="col-md-3">
                @Html.DisplayNameFor(model => model.Other):
                <strong>
                    @Html.DisplayFor(model => model.Other, new { htmlAttributes = new { @class = "form-control" } })
                </strong>
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.WorkInHours):
            </div>
            <div class="col-md-1">
                <strong class="pull-right">@Html.DisplayFor(model => model.WorkInHours)</strong>
            </div>
            <div class="col-md-1">
                <p> часа X </p>
            </div>
            <div class="col-md-1">
                <strong>@Html.DisplayFor(model => model.PricePerHour)</strong>
            </div>
            <div class="col-md-1">
                <p>лв/час</p>
            </div>
            <div class="col-md-2">
                 <p><strong>@ViewBag.ResultLabor</strong></p>
            </div>

        </div>
        <div class="form-group">
            <div class="col-md-4">
                @Html.DisplayNameFor(model => model.PriceForChangedEguipment):
            </div>
            <div class="col-md-1">
                <strong>@Html.DisplayFor(model => model.PriceForChangedEguipment)</strong>
            </div>
            <div class="col-md-1">
            </div>
            <div class="col-md-2">
                <strong>@ViewBag.ResultEquipment</strong>
            </div>

        </div>
        <div class="form-group">
            <div class="col-md-2">
                @Html.DisplayNameFor(model => model.DistanceInKm):
            </div>
            <div class="col-md-1">
                <strong class="pull-right">@Html.DisplayFor(model => model.DistanceInKm)</strong>
            </div>
            <div class="col-md-1">
                <p> X</p>
            </div>
            <div class="col-md-1">
                <strong>@Html.DisplayFor(model => model.PricePerKm)</strong>
            </div>
            <div class="col-md-1">
                <p>лв/км</p>
            </div>
            <div class="col-md-2">
                <strong>@ViewBag.ResultDistance</strong>
            </div>
        </div>

        <hr />
        <div class="form-group">
            @Html.DisplayNameFor(model => model.Note):
            <strong>
                @Html.DisplayFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
            </strong>
        </div>

    </div>
}

<div>
    @if (this.User.IsInRole("Администратор") || this.User.IsInRole("Редактор"))
    {
        @Html.ActionLink("Редактирай", "Edit", new { id = Model.Id })
    }
    @Html.ActionLink("Назад към списъка", "Index")
</div>
@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function () {

            $("#is-warranty-service").attr('disabled', true);
            $("#not-warranty-service").attr('disabled', true);
            $("#with-subscription-service").attr('disabled', true);
            $("#on-request-service").attr('disabled', true);
        });
    </script>
}